변수 = 그릇. 
뭘 담는가? 
데이터. 그러면 변수 시작 전에 데이터부터 알아보자.

데이터 형식
1. 기본 데이터 형식
  - 정수, 실수, 문자, 논리형
2. 복합 데이터 형식
  - 기본 데이터 형식들의 집합
  - 구조체, 클래스, 배열

기본 데이터 형식

숫자 형식 

1. byte 부호 없는 정수 : 8비트 = 1바이트 (8 bit = 1 byte)
   0 0 0 0 0 0 0 0
   1 1 1 1 1 1 1 1
   0 ~ 255

2. sbyte 부호 있는 정수 : 1 바이트 
   -128 ~ 127

3. short 부호 있는 정수 : 2 바이트
   -32,768 ~ 32,767

4. ushort 부호 없는 정수 : 2 바이트 (u = unsigned)
   0 ~ 65,535

5. int 부호 있는 정수 : 4 바이트
   -2^15 ~ 2^15-1

6. uint 부호 없는 정수 : 4 바이트
   0 ~ 2^16-1

7. long 부호 있는 정수 : 8 바이트
   -2^63 ~ 2^63-1

8. ulong 부호 없는 정수 : 8 바이트
   0 ~ 2^64-1

9. char : 2 바이트, 유니코드, 'a', '&', 유니코드 문자표 <- 궁금하면 찾아보기

변수의 선언 (기본 데이터 형식 뒤로 빼는게 좋겠다)
int x;
int : 데이터 형식, x : 변수이름
x = 100; 
x : 변수이름, = : 대입연산자, 100 : 데이터

int x;
x 라는 이름으로 저장공간이 할당 allocation 된다. 어디에? 메모리에. 여기서 메모리는 RAM

메모리 그림 그려서 설명해주기.

저장공간 할당 방법에는
스택
힙
두가지가 있다. 이건 변수를 언제 할당하고 해제하느냐의 문제. 나중에 배우도록 한다.

using System;

namespace Variables
{
	class MainApp
	{
		static void Main(string[] args)
		{
			int a = 100;
			Console.WriteLine($"a={a}");
		}
	}
}

일단 우리가 흔히 쓰는 변수는 스택에 저장된다
{ 
에서 할당되고
} 
에서 자동으로 해제된다



오버플로우를 잠깐 알아볼까요?
overflow 의 뜻? 넘치다.

심플하게 byte 로 해봅시다
부호없는 정수
byte = 1 byte = 8bit
내부적으로 어떻게 숫자를 표현할까?

0 = 0 0 0 0 0 0 0 0
1 = 0 0 0 0 0 0 0 1
2 = 0 0 0 0 0 0 1 0
3 = 0 0 0 0 0 0 1 1
...
255 = 1 1 1 1 1 1 1 1

byte x = 255;
x = x + 1;

Console.WriteLine($"x={x}");
x=0

x = 255 =  11111111
256 = 100000000 <= 1 00000000=x;

이게 왜 문제냐?

byte x;
byte y;

x = 256;
y = 3

x = x + 1;
Colsole.WriteLine($"y={y}");

y = 2;

왜??






